# Generated by Django 5.2.5 on 2025-09-29 04:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PracticeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Тип стажировки',
                'verbose_name_plural': 'Типы стажировки',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('director', 'Директор'), ('deputy_director', 'Зам.директора'), ('manager', 'Менеджер'), ('lawyer', 'Юрист'), ('advocate', 'Адвокат'), ('accountant', 'Бухгалтер'), ('hr', 'HR-менеджер'), ('admin', 'Админ'), ('trainee', 'Стажер'), ('external_lawyer', 'Внешний юрист')], default='lawyer', max_length=20)),
                ('position', models.CharField(blank=True, choices=[('trainee', 'Стажер'), ('assistant', 'Помощник'), ('senior_assistant', 'Ст. помощник'), ('junior_lawyer', 'Мл. Юрист'), ('lawyer', 'Юрист'), ('senior_lawyer', 'Ст. Юрист'), ('leading_lawyer', 'Ведущий Юр.'), ('chief_lawyer', 'Главный юр.'), ('partner_advocate', 'Партнер – Адвокат'), ('senior_partner_advocate', 'Старший партнер-Адвокат'), ('managing_partner_advocate', 'Управ.партнер-Адвокат')], max_length=30)),
                ('phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Номер телефона должен быть в формате: '+999999999'. Допускается до 15 цифр.", regex='^\\+?1?\\d{9,15}$')])),
                ('passport_series', models.CharField(blank=True, max_length=4)),
                ('passport_number', models.CharField(blank=True, max_length=6)),
                ('passport_issued_by', models.TextField(blank=True)),
                ('passport_issue_date', models.DateField(blank=True, null=True)),
                ('registration_address', models.TextField(blank=True)),
                ('hire_date', models.DateField(blank=True, null=True)),
                ('contract_file', models.FileField(blank=True, upload_to='employee_contracts/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TraineeProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program_description', models.TextField(blank=True, verbose_name='Описание программы')),
                ('diploma', models.FileField(blank=True, upload_to='trainee_documents/', verbose_name='Диплом')),
                ('passport_copy', models.FileField(blank=True, upload_to='trainee_documents/', verbose_name='Копия паспорта')),
                ('application', models.FileField(blank=True, upload_to='trainee_documents/', verbose_name='Заявление')),
                ('practice_contract', models.FileField(upload_to='trainee_documents/', verbose_name='Договор стажировки')),
                ('curator', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['lawyer', 'advocate']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trainees', to=settings.AUTH_USER_MODEL, verbose_name='Куратор')),
                ('practice_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.practicetype', verbose_name='Тип стажировки')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trainee_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Профиль стажера',
                'verbose_name_plural': 'Профили стажеров',
            },
        ),
    ]
